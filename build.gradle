import groovy.json.*

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath("io.spring.gradle:dependency-management-plugin:$springPlatformGradleVersion")
		classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootGradleVersion")
	}
}

apply plugin: "io.spring.dependency-management"

dependencyManagement {
	imports {
		mavenBom "io.spring.platform:platform-bom:$springPlatformVersion"
	}
}

repositories {
	jcenter()
	mavenLocal()
}

apply plugin: "java"
apply plugin: "spring-boot"
apply plugin: "maven"
apply plugin: "eclipse"

group = "karma"
version = "1.0"

task wrapper(type: Wrapper) {
	gradleVersion = "2.14"
}

/*
 * Dependencies
 */
dependencies {
	// spring dependencies
	compile("org.springframework.boot:spring-boot-starter")
	compile("org.springframework.boot:spring-boot-configuration-processor")
	compile("org.springframework.boot:spring-boot-starter-aop")
	compile("org.springframework.boot:spring-boot-starter-thymeleaf") {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
		exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-el'
	}
	compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.springframework.boot:spring-boot-starter-mail")
	compile("org.springframework.boot:spring-boot-starter-jdbc") {
		exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc'
	}

	// external dependencies
	compile("javax.servlet:javax.servlet-api")
	compile("org.apache.commons:commons-lang3")
	compile("commons-beanutils:commons-beanutils")
	compile("commons-fileupload:commons-fileupload")
	
	//test dependencies
	testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile("org.springframework.boot:spring-boot-starter-actuator")
	testRuntime("org.springframework.boot:spring-boot-starter-tomcat")
	testRuntime("org.springframework.boot:spring-boot-devtools")
	testRuntime("org.jolokia:jolokia-core")	
}

/*
 * Build Settings
 */
compileJava {
	sourceCompatibility = javaVersion
	targetCompatibility = javaVersion
}

bootRepackage {
	mainClass = "test.accelerate.AccelerateTest"
	enabled = false
}

jar {
	from sourceSets.main.allSource
}

/*
 * Eclipse settings
 */
eclipse {
	classpath {
		defaultOutputDir = file("build/classes")
		
		file {
			whenMerged { classpath ->
				classpath.entries.collect { entry ->
					if (entry.kind == "con" && entry.path == "org.eclipse.jdt.launching.JRE_CONTAINER") {
						entry.path = "org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-" + javaVersion
					}
					
					entry
				}
			}
		}
	}
	jdt {
		sourceCompatibility = javaVersion
		targetCompatibility = javaVersion
		
		file {
			withProperties { properties ->
				properties.put("org.eclipse.jdt.core.compiler.processAnnotations", "disabled")
				properties.put("org.eclipse.jdt.core.compiler.codegen.targetPlatform", javaVersion)
			}
		}
	}
}

task testTask << {
	println "hello";
}